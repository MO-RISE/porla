#!/usr/bin/env python3

"""
Command line utility tool for processing input from stdin. Each line on the
input stream is parsed according to the specification provided by the user
and assembled into a json object.
"""

import sys
import json
import logging
import warnings
import argparse

import parse

# Parse cli arguments
parser = argparse.ArgumentParser()
parser.add_argument(
    "--log-level", type=lambda level: getattr(logging, level), default=logging.WARNING
)
parser.add_argument(
    "specification",
    type=str,
    help="Example: '{timestamp} {data}',"
    "See https://github.com/r1chardj0n3s/parse#format-specification",
)

args = parser.parse_args()

# Setup logger
logging.basicConfig(
    format="%(asctime)s %(levelname)s %(name)s %(message)s", level=args.log_level
)
logging.captureWarnings(True)
warnings.filterwarnings("once")

logger = logging.getLogger("jsonify")


# Compile pattern
pattern = parse.compile(args.specification)

# Start processing
for line in sys.stdin:
    logger.debug(line)
    res = pattern.parse(line.rstrip())

    if not res:
        logger.error(
            "Could not parse line: %s according to the specification: %s",
            line,
            args.specification,
        )
        continue

    sys.stdout.write(json.dumps(res.named) + "\n")
    sys.stdout.flush()
